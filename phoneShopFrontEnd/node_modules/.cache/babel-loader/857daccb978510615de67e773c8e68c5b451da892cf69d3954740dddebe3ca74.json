{"ast":null,"code":"const url = \"http://localhost:8080/shop\";\nexport const loginUser = async (email, password) => {\n  const response = await fetch(url + \"/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password\n    })\n  });\n  console.log(response);\n  if (response.ok) {\n    return response.text();\n  } else if (!response.ok) {\n    throw new Error(await response.text());\n  }\n};\nexport const register = async (email, password) => {\n  const response = await fetch(url + \"/registration\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password\n    })\n  });\n  if (!response.ok) {\n    throw new Error(await response.text());\n  }\n};","map":{"version":3,"names":["url","loginUser","email","password","response","fetch","method","headers","body","JSON","stringify","console","log","ok","text","Error","register"],"sources":["C:/Users/Sofronie/OneDrive/Рабочий стол/Программирование/Projects/Tech-Shop/Tech-shop/phoneShopFrontEnd/src/components/Services/Services.jsx"],"sourcesContent":["const url = \"http://localhost:8080/shop\";\r\n\r\nexport const loginUser = async (email, password) => {\r\n  const response = await fetch(url + \"/login\", {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({email: email, password: password}),\r\n  });\r\n\r\n  console.log(response)\r\n\r\n  if (response.ok) {\r\n    return response.text();\r\n  } else if (!response.ok) {\r\n    throw new Error(await response.text());\r\n  }\r\n};\r\n\r\nexport const register = async (email, password) => {\r\n  const response = await fetch(url + \"/registration\", {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({email: email, password: password}),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(await response.text());\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,GAAG,GAAG,4BAA4B;AAExC,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAClD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,GAAG,QAAQ,EAAE;IAC3CM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACR,KAAK,EAAEA,KAAK;MAAEC,QAAQ,EAAEA;IAAQ,CAAC;EACzD,CAAC,CAAC;EAEFQ,OAAO,CAACC,GAAG,CAACR,QAAQ,CAAC;EAErB,IAAIA,QAAQ,CAACS,EAAE,EAAE;IACf,OAAOT,QAAQ,CAACU,IAAI,CAAC,CAAC;EACxB,CAAC,MAAM,IAAI,CAACV,QAAQ,CAACS,EAAE,EAAE;IACvB,MAAM,IAAIE,KAAK,CAAC,MAAMX,QAAQ,CAACU,IAAI,CAAC,CAAC,CAAC;EACxC;AACF,CAAC;AAED,OAAO,MAAME,QAAQ,GAAG,MAAAA,CAAOd,KAAK,EAAEC,QAAQ,KAAK;EACjD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,GAAG,eAAe,EAAE;IAClDM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACR,KAAK,EAAEA,KAAK;MAAEC,QAAQ,EAAEA;IAAQ,CAAC;EACzD,CAAC,CAAC;EAEF,IAAI,CAACC,QAAQ,CAACS,EAAE,EAAE;IAChB,MAAM,IAAIE,KAAK,CAAC,MAAMX,QAAQ,CAACU,IAAI,CAAC,CAAC,CAAC;EACxC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}