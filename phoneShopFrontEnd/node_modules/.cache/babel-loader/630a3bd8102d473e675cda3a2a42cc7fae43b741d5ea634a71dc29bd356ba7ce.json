{"ast":null,"code":"// import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n// import { useState } from \"react\";\n\n// export const api = createApi({\n//   reducerPath: \"api\",\n//   tagTypes: [\"TechProducts\"],\n//   baseQuery: fetchBaseQuery({ baseUrl: \"http://localhost:8080/product/\" }),\n//   endpoints: (build) => ({\n//     getAllProducts: build.query({\n//       query: ({ page = 0, size = 9, token = \"\" }) =>\n//         `all?page=${page}&size=${size}&productToken=${token}`,\n//       providesTags: (result) =>\n//         result.content\n//           ? [\n//               ...result.content.map(({ id }) => ({ type: \"TechProducts\", id })),\n//               \"TechProducts\",\n//             ]\n//           : [\"TechProducts\"],\n//     }),\n//   }),\n// });\n\n// export const { useGetAllProductsQuery } = api;\n\nimport { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nexport const api = createApi({\n  reducerPath: \"api\",\n  tagTypes: [\"TechProducts\"],\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"http://localhost:8080/product/\",\n    prepareHeaders: (headers, {\n      getState\n    }) => {\n      const token = getState(); // Assuming token is stored in auth slice\n      if (token) {\n        headers.set(\"Authorization\", `Bearer ${token}`);\n      }\n      return headers;\n    }\n  }),\n  endpoints: build => ({\n    getAllProducts: build.query({\n      query: ({\n        page = 0,\n        size = 9\n      }) => `all?page=${page}&size=${size}`,\n      providesTags: result => result !== null && result !== void 0 && result.content ? [...result.content.map(({\n        id\n      }) => ({\n        type: \"TechProducts\",\n        id\n      })), \"TechProducts\"] : [\"TechProducts\"]\n    })\n  })\n});\nexport const {\n  useGetAllProductsQuery\n} = api;","map":{"version":3,"names":["createApi","fetchBaseQuery","api","reducerPath","tagTypes","baseQuery","baseUrl","prepareHeaders","headers","getState","token","set","endpoints","build","getAllProducts","query","page","size","providesTags","result","content","map","id","type","useGetAllProductsQuery"],"sources":["C:/Users/Sofronie/OneDrive/Рабочий стол/Программирование/Projects/Tech-Shop/Tech-shop/phoneShopFrontEnd/src/store/api.jsx"],"sourcesContent":["// import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n// import { useState } from \"react\";\r\n\r\n// export const api = createApi({\r\n//   reducerPath: \"api\",\r\n//   tagTypes: [\"TechProducts\"],\r\n//   baseQuery: fetchBaseQuery({ baseUrl: \"http://localhost:8080/product/\" }),\r\n//   endpoints: (build) => ({\r\n//     getAllProducts: build.query({\r\n//       query: ({ page = 0, size = 9, token = \"\" }) =>\r\n//         `all?page=${page}&size=${size}&productToken=${token}`,\r\n//       providesTags: (result) =>\r\n//         result.content\r\n//           ? [\r\n//               ...result.content.map(({ id }) => ({ type: \"TechProducts\", id })),\r\n//               \"TechProducts\",\r\n//             ]\r\n//           : [\"TechProducts\"],\r\n//     }),\r\n//   }),\r\n// });\r\n\r\n// export const { useGetAllProductsQuery } = api;\r\n\r\nimport { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport const api = createApi({\r\n  reducerPath: \"api\",\r\n  tagTypes: [\"TechProducts\"],\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: \"http://localhost:8080/product/\",\r\n    prepareHeaders: (headers, { getState }) => {\r\n      const token = getState(); // Assuming token is stored in auth slice\r\n      if (token) {\r\n        headers.set(\"Authorization\", `Bearer ${token}`);\r\n      }\r\n      return headers;\r\n    },\r\n  }),\r\n  endpoints: (build) => ({\r\n    getAllProducts: build.query({\r\n      query: ({ page = 0, size = 9 }) => `all?page=${page}&size=${size}`,\r\n      providesTags: (result) =>\r\n        result?.content\r\n          ? [\r\n              ...result.content.map(({ id }) => ({ type: \"TechProducts\", id })),\r\n              \"TechProducts\",\r\n            ]\r\n          : [\"TechProducts\"],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetAllProductsQuery } = api;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAExE,OAAO,MAAMC,GAAG,GAAGF,SAAS,CAAC;EAC3BG,WAAW,EAAE,KAAK;EAClBC,QAAQ,EAAE,CAAC,cAAc,CAAC;EAC1BC,SAAS,EAAEJ,cAAc,CAAC;IACxBK,OAAO,EAAE,gCAAgC;IACzCC,cAAc,EAAEA,CAACC,OAAO,EAAE;MAAEC;IAAS,CAAC,KAAK;MACzC,MAAMC,KAAK,GAAGD,QAAQ,CAAC,CAAC,CAAC,CAAC;MAC1B,IAAIC,KAAK,EAAE;QACTF,OAAO,CAACG,GAAG,CAAC,eAAe,EAAE,UAAUD,KAAK,EAAE,CAAC;MACjD;MACA,OAAOF,OAAO;IAChB;EACF,CAAC,CAAC;EACFI,SAAS,EAAGC,KAAK,KAAM;IACrBC,cAAc,EAAED,KAAK,CAACE,KAAK,CAAC;MAC1BA,KAAK,EAAEA,CAAC;QAAEC,IAAI,GAAG,CAAC;QAAEC,IAAI,GAAG;MAAE,CAAC,KAAK,YAAYD,IAAI,SAASC,IAAI,EAAE;MAClEC,YAAY,EAAGC,MAAM,IACnBA,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEC,OAAO,GACX,CACE,GAAGD,MAAM,CAACC,OAAO,CAACC,GAAG,CAAC,CAAC;QAAEC;MAAG,CAAC,MAAM;QAAEC,IAAI,EAAE,cAAc;QAAED;MAAG,CAAC,CAAC,CAAC,EACjE,cAAc,CACf,GACD,CAAC,cAAc;IACvB,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEE;AAAuB,CAAC,GAAGtB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}