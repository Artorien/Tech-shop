{"ast":null,"code":"// import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n// import { useState } from \"react\";\n\n// export const api = createApi({\n//   reducerPath: \"api\",\n//   tagTypes: [\"TechProducts\"],\n//   baseQuery: fetchBaseQuery({ baseUrl: \"http://localhost:8080/product/\" }),\n//   endpoints: (build) => ({\n//     getAllProducts: build.query({\n//       query: ({ page = 0, size = 9, token = \"iPhone\" }) =>\n//         `all?page=${page}&size=${size}&productToken=${token}`,\n//       providesTags: (result) =>\n//         result.content\n//           ? [\n//               ...result.content.map(({ id }) => ({ type: \"TechProducts\", id })),\n//               \"TechProducts\",\n//             ]\n//           : [\"TechProducts\"],\n//     }),\n//   }),\n// });\n\n// export const { useGetAllProductsQuery } = api;\n\n// import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\n// export const api = createApi({\n//   reducerPath: \"api\",\n//   tagTypes: [\"TechProducts\"],\n//   baseQuery: fetchBaseQuery({\n//     baseUrl: \"http://localhost:8080/product/\",\n//     prepareHeaders: (headers, { getState }) => {\n//       console.log(getState());\n//       const token = getState(); // Assuming token is stored in auth slice\n//       if (token) {\n//         headers.set(\"Authorization\", `Bearer ${token}`);\n//       }\n//       return headers;\n//     },\n//   }),\n//   endpoints: (build) => ({\n//     getAllProducts: build.query({\n//       query: ({ page = 0, size = 9 }) => `all?page=${page}&size=${size}`,\n//       providesTags: (result) =>\n//         result?.content\n//           ? [\n//               ...result.content.map(({ id }) => ({ type: \"TechProducts\", id })),\n//               \"TechProducts\",\n//             ]\n//           : [\"TechProducts\"],\n//     }),\n//   }),\n// });\n\nexport const {\n  useGetAllProductsQuery\n} = api;","map":{"version":3,"names":["useGetAllProductsQuery","api"],"sources":["C:/Users/Sofronie/OneDrive/Рабочий стол/Программирование/Projects/Tech-Shop/Tech-shop/phoneShopFrontEnd/src/store/api.jsx"],"sourcesContent":["// import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n// import { useState } from \"react\";\r\n\r\n// export const api = createApi({\r\n//   reducerPath: \"api\",\r\n//   tagTypes: [\"TechProducts\"],\r\n//   baseQuery: fetchBaseQuery({ baseUrl: \"http://localhost:8080/product/\" }),\r\n//   endpoints: (build) => ({\r\n//     getAllProducts: build.query({\r\n//       query: ({ page = 0, size = 9, token = \"iPhone\" }) =>\r\n//         `all?page=${page}&size=${size}&productToken=${token}`,\r\n//       providesTags: (result) =>\r\n//         result.content\r\n//           ? [\r\n//               ...result.content.map(({ id }) => ({ type: \"TechProducts\", id })),\r\n//               \"TechProducts\",\r\n//             ]\r\n//           : [\"TechProducts\"],\r\n//     }),\r\n//   }),\r\n// });\r\n\r\n// export const { useGetAllProductsQuery } = api;\r\n\r\n// import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\n// export const api = createApi({\r\n//   reducerPath: \"api\",\r\n//   tagTypes: [\"TechProducts\"],\r\n//   baseQuery: fetchBaseQuery({\r\n//     baseUrl: \"http://localhost:8080/product/\",\r\n//     prepareHeaders: (headers, { getState }) => {\r\n//       console.log(getState());\r\n//       const token = getState(); // Assuming token is stored in auth slice\r\n//       if (token) {\r\n//         headers.set(\"Authorization\", `Bearer ${token}`);\r\n//       }\r\n//       return headers;\r\n//     },\r\n//   }),\r\n//   endpoints: (build) => ({\r\n//     getAllProducts: build.query({\r\n//       query: ({ page = 0, size = 9 }) => `all?page=${page}&size=${size}`,\r\n//       providesTags: (result) =>\r\n//         result?.content\r\n//           ? [\r\n//               ...result.content.map(({ id }) => ({ type: \"TechProducts\", id })),\r\n//               \"TechProducts\",\r\n//             ]\r\n//           : [\"TechProducts\"],\r\n//     }),\r\n//   }),\r\n// });\r\n\r\nexport const { useGetAllProductsQuery } = api;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAM;EAAEA;AAAuB,CAAC,GAAGC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}