{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sofronie\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u041F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\\\\Projects\\\\Tech-Shop\\\\Tech-shop\\\\phoneShopFrontEnd\\\\src\\\\components\\\\Main-page\\\\Main-animation.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport mountains from \"/images/mountains.png\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MainAnimation() {\n  _s();\n  const baseText = \"Best \";\n  const words = [\"Devices\", \"Prices\", \"Quality\"];\n  const typingSpeed = 200;\n  const deletingSpeed = 100;\n  const pauseDuration = 2000;\n  const [text, setText] = useState(baseText);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [typingInterval, setTypingInterval] = useState(typingSpeed);\n  const [wordIndex, setWordIndex] = useState(0);\n  useEffect(() => {\n    let currentWord = words[wordIndex];\n    const textAppearance = () => {\n      if (text === baseText + currentWord && !isDeleting) {\n        setTimeout(() => setIsDeleting(true), pauseDuration);\n      } else if (isDeleting && text === baseText) {\n        setIsDeleting(false);\n        setWordIndex(previousIndex => (previousIndex + 1) % words.length);\n        setTypingInterval(typingSpeed);\n      } else if (isDeleting) {\n        setTypingInterval(deletingSpeed);\n        setText(baseText + currentWord.substring(0, text.length - baseText.length - 1));\n      } else if (!isDeleting) {\n        setText(baseText + currentWord.substring(0, text.length - baseText.length + 1));\n      }\n    };\n    const timeOut = setTimeout(textAppearance, typingInterval);\n    return () => clearTimeout(timeOut);\n  }, [text, wordIndex, isDeleting, typingInterval]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"textWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mountains\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"\",\n        alt: \"mountains\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(MainAnimation, \"pIPiM5TwgwD8FH5XFpUyNRXQFXs=\");\n_c = MainAnimation;\nexport default MainAnimation;\nvar _c;\n$RefreshReg$(_c, \"MainAnimation\");","map":{"version":3,"names":["useState","useEffect","mountains","jsxDEV","_jsxDEV","Fragment","_Fragment","MainAnimation","_s","baseText","words","typingSpeed","deletingSpeed","pauseDuration","text","setText","isDeleting","setIsDeleting","typingInterval","setTypingInterval","wordIndex","setWordIndex","currentWord","textAppearance","setTimeout","previousIndex","length","substring","timeOut","clearTimeout","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Sofronie/OneDrive/Рабочий стол/Программирование/Projects/Tech-Shop/Tech-shop/phoneShopFrontEnd/src/components/Main-page/Main-animation.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport mountains from \"/images/mountains.png\";\r\n\r\nfunction MainAnimation() {\r\n  const baseText = \"Best \";\r\n  const words = [\"Devices\", \"Prices\", \"Quality\"];\r\n  const typingSpeed = 200;\r\n  const deletingSpeed = 100;\r\n  const pauseDuration = 2000;\r\n\r\n  const [text, setText] = useState(baseText);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [typingInterval, setTypingInterval] = useState(typingSpeed);\r\n  const [wordIndex, setWordIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let currentWord = words[wordIndex];\r\n\r\n    const textAppearance = () => {\r\n      if (text === baseText + currentWord && !isDeleting) {\r\n        setTimeout(() => setIsDeleting(true), pauseDuration);\r\n      } else if (isDeleting && text === baseText) {\r\n        setIsDeleting(false);\r\n        setWordIndex((previousIndex) => (previousIndex + 1) % words.length);\r\n        setTypingInterval(typingSpeed);\r\n      } else if (isDeleting) {\r\n        setTypingInterval(deletingSpeed);\r\n        setText(\r\n          baseText + currentWord.substring(0, text.length - baseText.length - 1)\r\n        );\r\n      } else if (!isDeleting) {\r\n        setText(\r\n          baseText + currentWord.substring(0, text.length - baseText.length + 1)\r\n        );\r\n      }\r\n    };\r\n\r\n    const timeOut = setTimeout(textAppearance, typingInterval);\r\n\r\n    return () => clearTimeout(timeOut);\r\n  }, [text, wordIndex, isDeleting, typingInterval]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"textWrapper\">\r\n        <h1>{text}</h1>\r\n      </div>\r\n      <div className=\"mountains\">\r\n        <img src=\"\" alt=\"mountains\" />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MainAnimation;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}